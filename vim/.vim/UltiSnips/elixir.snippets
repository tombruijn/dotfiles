priority -50

snippet defm "defmodule <name>... do"
defmodule ${1:module_name} do
  ${0:${VISUAL:# functions}}
end
endsnippet

snippet def "def <name>... do"
def ${1:func_name} do
  ${0:${VISUAL:# object}}
end
endsnippet

snippet defp "defp <name>... do"
defp ${1:func_name} do
  ${0:${VISUAL:# object}}
end
endsnippet

snippet "des(cribe)?" "describe name do" r
describe "${1:describe name}" do
  ${0:${VISUAL:tests}}
end
endsnippet

snippet test "test name do"
test "${1:test name}" do
  ${0:${VISUAL:assertions}}
end
endsnippet

snippet pry "IEx.pry"
require IEx; IEx.pry
endsnippet

snippet puts "IO.puts"
IO.puts ${0:${VISUAL:object}}
endsnippet

snippet inspect "IO.inspect"
IO.inspect ${0:${VISUAL:object}}
endsnippet
